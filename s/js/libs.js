
var BrowserDetect={init:function(){this.browser=this.searchString(this.dataBrowser)||"An unknown browser";this.version=this.searchVersion(navigator.userAgent)||this.searchVersion(navigator.appVersion)||"an unknown version";this.OS=this.searchString(this.dataOS)||"an unknown OS";},searchString:function(data){for(var i=0;i<data.length;i++){var dataString=data[i].string;var dataProp=data[i].prop;this.versionSearchString=data[i].versionSearch||data[i].identity;if(dataString){if(dataString.indexOf(data[i].subString)!=-1)
return data[i].identity;}
else if(dataProp)
return data[i].identity;}},searchVersion:function(dataString){var index=dataString.indexOf(this.versionSearchString);if(index==-1)return;return parseFloat(dataString.substring(index+this.versionSearchString.length+1));},dataBrowser:[{string:navigator.userAgent,subString:"Chrome",identity:"Chrome"},{string:navigator.userAgent,subString:"OmniWeb",versionSearch:"OmniWeb/",identity:"OmniWeb"},{string:navigator.vendor,subString:"Apple",identity:"Safari",versionSearch:"Version"},{prop:window.opera,identity:"Opera"},{string:navigator.vendor,subString:"iCab",identity:"iCab"},{string:navigator.vendor,subString:"KDE",identity:"Konqueror"},{string:navigator.userAgent,subString:"Firefox",identity:"Firefox"},{string:navigator.vendor,subString:"Camino",identity:"Camino"},{string:navigator.userAgent,subString:"Netscape",identity:"Netscape"},{string:navigator.userAgent,subString:"MSIE",identity:"Explorer",versionSearch:"MSIE"},{string:navigator.userAgent,subString:"Gecko",identity:"Mozilla",versionSearch:"rv"},{string:navigator.userAgent,subString:"Mozilla",identity:"Netscape",versionSearch:"Mozilla"}],dataOS:[{string:navigator.platform,subString:"Win",identity:"Windows"},{string:navigator.platform,subString:"Mac",identity:"Mac"},{string:navigator.userAgent,subString:"iPhone",identity:"iPhone/iPod"},{string:navigator.platform,subString:"Linux",identity:"Linux"}]};BrowserDetect.init();
$(function(){$('body').addClass('browser_'+BrowserDetect.browser);});var md5=(function md5_module(){var MD5_T=new Array(0x00000000,0xd76aa478,0xe8c7b756,0x242070db,0xc1bdceee,0xf57c0faf,0x4787c62a,0xa8304613,0xfd469501,0x698098d8,0x8b44f7af,0xffff5bb1,0x895cd7be,0x6b901122,0xfd987193,0xa679438e,0x49b40821,0xf61e2562,0xc040b340,0x265e5a51,0xe9b6c7aa,0xd62f105d,0x02441453,0xd8a1e681,0xe7d3fbc8,0x21e1cde6,0xc33707d6,0xf4d50d87,0x455a14ed,0xa9e3e905,0xfcefa3f8,0x676f02d9,0x8d2a4c8a,0xfffa3942,0x8771f681,0x6d9d6122,0xfde5380c,0xa4beea44,0x4bdecfa9,0xf6bb4b60,0xbebfbc70,0x289b7ec6,0xeaa127fa,0xd4ef3085,0x04881d05,0xd9d4d039,0xe6db99e5,0x1fa27cf8,0xc4ac5665,0xf4292244,0x432aff97,0xab9423a7,0xfc93a039,0x655b59c3,0x8f0ccc92,0xffeff47d,0x85845dd1,0x6fa87e4f,0xfe2ce6e0,0xa3014314,0x4e0811a1,0xf7537e82,0xbd3af235,0x2ad7d2bb,0xeb86d391);var MD5_round1=new Array(new Array(0,7,1),new Array(1,12,2),new Array(2,17,3),new Array(3,22,4),new Array(4,7,5),new Array(5,12,6),new Array(6,17,7),new Array(7,22,8),new Array(8,7,9),new Array(9,12,10),new Array(10,17,11),new Array(11,22,12),new Array(12,7,13),new Array(13,12,14),new Array(14,17,15),new Array(15,22,16));var MD5_round2=new Array(new Array(1,5,17),new Array(6,9,18),new Array(11,14,19),new Array(0,20,20),new Array(5,5,21),new Array(10,9,22),new Array(15,14,23),new Array(4,20,24),new Array(9,5,25),new Array(14,9,26),new Array(3,14,27),new Array(8,20,28),new Array(13,5,29),new Array(2,9,30),new Array(7,14,31),new Array(12,20,32));var MD5_round3=new Array(new Array(5,4,33),new Array(8,11,34),new Array(11,16,35),new Array(14,23,36),new Array(1,4,37),new Array(4,11,38),new Array(7,16,39),new Array(10,23,40),new Array(13,4,41),new Array(0,11,42),new Array(3,16,43),new Array(6,23,44),new Array(9,4,45),new Array(12,11,46),new Array(15,16,47),new Array(2,23,48));var MD5_round4=new Array(new Array(0,6,49),new Array(7,10,50),new Array(14,15,51),new Array(5,21,52),new Array(12,6,53),new Array(3,10,54),new Array(10,15,55),new Array(1,21,56),new Array(8,6,57),new Array(15,10,58),new Array(6,15,59),new Array(13,21,60),new Array(4,6,61),new Array(11,10,62),new Array(2,15,63),new Array(9,21,64));function MD5_F(x,y,z){return(x&y)|(~x&z);}
function MD5_G(x,y,z){return(x&z)|(y&~z);}
function MD5_H(x,y,z){return x^y^z;}
function MD5_I(x,y,z){return y^(x|~z);}
var MD5_round=new Array(new Array(MD5_F,MD5_round1),new Array(MD5_G,MD5_round2),new Array(MD5_H,MD5_round3),new Array(MD5_I,MD5_round4));function MD5_pack(n32){return String.fromCharCode(n32&0xff)+
String.fromCharCode((n32>>>8)&0xff)+
String.fromCharCode((n32>>>16)&0xff)+
String.fromCharCode((n32>>>24)&0xff);}
function MD5_unpack(s4){return s4.charCodeAt(0)|(s4.charCodeAt(1)<<8)|(s4.charCodeAt(2)<<16)|(s4.charCodeAt(3)<<24);}
function MD5_number(n){while(n<0)
n+=4294967296;while(n>4294967295)
n-=4294967296;return n;}
function MD5_apply_round(x,s,f,abcd,r){var a,b,c,d;var kk,ss,ii;var t,u;a=abcd[0];b=abcd[1];c=abcd[2];d=abcd[3];kk=r[0];ss=r[1];ii=r[2];u=f(s[b],s[c],s[d]);t=s[a]+u+x[kk]+MD5_T[ii];t=MD5_number(t);t=((t<<ss)|(t>>>(32-ss)));t+=s[b];s[a]=MD5_number(t);}
function MD5_hash(data){var abcd,x,state,s;var len,index,padLen,f,r;var i,j,k;var tmp;state=new Array(0x67452301,0xefcdab89,0x98badcfe,0x10325476);len=data.length;index=len&0x3f;padLen=(index<56)?(56-index):(120-index);if(padLen>0){data+="\x80";for(i=0;i<padLen-1;i++)
data+="\x00";}
data+=MD5_pack(len*8);data+=MD5_pack(0);len+=padLen+8;abcd=new Array(0,1,2,3);x=new Array(16);s=new Array(4);for(k=0;k<len;k+=64){for(i=0,j=k;i<16;i++,j+=4){x[i]=data.charCodeAt(j)|(data.charCodeAt(j+1)<<8)|(data.charCodeAt(j+2)<<16)|(data.charCodeAt(j+3)<<24);}
for(i=0;i<4;i++)
s[i]=state[i];for(i=0;i<4;i++){f=MD5_round[i][0];r=MD5_round[i][1];for(j=0;j<16;j++){MD5_apply_round(x,s,f,abcd,r[j]);tmp=abcd[0];abcd[0]=abcd[3];abcd[3]=abcd[2];abcd[2]=abcd[1];abcd[1]=tmp;}}
for(i=0;i<4;i++){state[i]+=s[i];state[i]=MD5_number(state[i]);}}
return MD5_pack(state[0])+
MD5_pack(state[1])+
MD5_pack(state[2])+
MD5_pack(state[3]);}
function MD5_hexhash(data){var i,out,c;var bit128;bit128=MD5_hash(data);out="";for(i=0;i<16;i++){c=bit128.charCodeAt(i);out+="0123456789abcdef".charAt((c>>4)&0xf);out+="0123456789abcdef".charAt(c&0xf);}
return out;}
return{hash:MD5_hexhash,bit_hash:MD5_hash};})();(function(window){var defined={setTimeout:typeof window.setTimeout!=="undefined",sessionStorage:(function(){try{return!!sessionStorage.getItem;}catch(e){return false;}})()};var testId=0,toString=Object.prototype.toString,hasOwn=Object.prototype.hasOwnProperty;var Test=function(name,testName,expected,testEnvironmentArg,async,callback){this.name=name;this.testName=testName;this.expected=expected;this.testEnvironmentArg=testEnvironmentArg;this.async=async;this.callback=callback;this.assertions=[];};Test.prototype={init:function(){var tests=id("qunit-tests");if(tests){var b=document.createElement("strong");b.innerHTML="Running "+this.name;var li=document.createElement("li");li.appendChild(b);li.className="running";li.id=this.id="test-output"+testId++;tests.appendChild(li);}},setup:function(){if(this.module!=config.previousModule){if(config.previousModule){runLoggingCallbacks('moduleDone',QUnit,{name:config.previousModule,failed:config.moduleStats.bad,passed:config.moduleStats.all-config.moduleStats.bad,total:config.moduleStats.all});}
config.previousModule=this.module;config.moduleStats={all:0,bad:0};runLoggingCallbacks('moduleStart',QUnit,{name:this.module});}
config.current=this;this.testEnvironment=extend({setup:function(){},teardown:function(){}},this.moduleTestEnvironment);if(this.testEnvironmentArg){extend(this.testEnvironment,this.testEnvironmentArg);}
runLoggingCallbacks('testStart',QUnit,{name:this.testName,module:this.module});QUnit.current_testEnvironment=this.testEnvironment;try{if(!config.pollution){saveGlobal();}
this.testEnvironment.setup.call(this.testEnvironment);}catch(e){QUnit.ok(false,"Setup failed on "+this.testName+": "+e.message);}},run:function(){config.current=this;if(this.async){QUnit.stop();}
if(config.notrycatch){this.callback.call(this.testEnvironment);return;}
try{this.callback.call(this.testEnvironment);}catch(e){fail("Test "+this.testName+" died, exception and test follows",e,this.callback);QUnit.ok(false,"Died on test #"+(this.assertions.length+1)+": "+e.message+" - "+QUnit.jsDump.parse(e));saveGlobal();if(config.blocking){QUnit.start();}}},teardown:function(){config.current=this;try{this.testEnvironment.teardown.call(this.testEnvironment);checkPollution();}catch(e){QUnit.ok(false,"Teardown failed on "+this.testName+": "+e.message);}},finish:function(){config.current=this;if(this.expected!=null&&this.expected!=this.assertions.length){QUnit.ok(false,"Expected "+this.expected+" assertions, but "+this.assertions.length+" were run");}
var good=0,bad=0,tests=id("qunit-tests");config.stats.all+=this.assertions.length;config.moduleStats.all+=this.assertions.length;if(tests){var ol=document.createElement("ol");for(var i=0;i<this.assertions.length;i++){var assertion=this.assertions[i];var li=document.createElement("li");li.className=assertion.result?"pass":"fail";li.innerHTML=assertion.message||(assertion.result?"okay":"failed");ol.appendChild(li);if(assertion.result){good++;}else{bad++;config.stats.bad++;config.moduleStats.bad++;}}
if(QUnit.config.reorder&&defined.sessionStorage){if(bad){sessionStorage.setItem("qunit-"+this.module+"-"+this.testName,bad);}else{sessionStorage.removeItem("qunit-"+this.module+"-"+this.testName);}}
if(bad==0){ol.style.display="none";}
var b=document.createElement("strong");b.innerHTML=this.name+" <b class='counts'>(<b class='failed'>"+bad+"</b>, <b class='passed'>"+good+"</b>, "+this.assertions.length+")</b>";var a=document.createElement("a");a.innerHTML="Rerun";a.href=QUnit.url({filter:getText([b]).replace(/\([^)]+\)$/,"").replace(/(^\s*|\s*$)/g,"")});addEvent(b,"click",function(){var next=b.nextSibling.nextSibling,display=next.style.display;next.style.display=display==="none"?"block":"none";});addEvent(b,"dblclick",function(e){var target=e&&e.target?e.target:window.event.srcElement;if(target.nodeName.toLowerCase()=="span"||target.nodeName.toLowerCase()=="b"){target=target.parentNode;}
if(window.location&&target.nodeName.toLowerCase()==="strong"){window.location=QUnit.url({filter:getText([target]).replace(/\([^)]+\)$/,"").replace(/(^\s*|\s*$)/g,"")});}});var li=id(this.id);li.className=bad?"fail":"pass";li.removeChild(li.firstChild);li.appendChild(b);li.appendChild(a);li.appendChild(ol);}else{for(var i=0;i<this.assertions.length;i++){if(!this.assertions[i].result){bad++;config.stats.bad++;config.moduleStats.bad++;}}}
try{QUnit.reset();}catch(e){fail("reset() failed, following Test "+this.testName+", exception and reset fn follows",e,QUnit.reset);}
runLoggingCallbacks('testDone',QUnit,{name:this.testName,module:this.module,failed:bad,passed:this.assertions.length-bad,total:this.assertions.length});},queue:function(){var test=this;synchronize(function(){test.init();});function run(){synchronize(function(){test.setup();});synchronize(function(){test.run();});synchronize(function(){test.teardown();});synchronize(function(){test.finish();});}
var bad=QUnit.config.reorder&&defined.sessionStorage&&+sessionStorage.getItem("qunit-"+this.module+"-"+this.testName);if(bad){run();}else{synchronize(run,true);};}};var QUnit={module:function(name,testEnvironment){config.currentModule=name;config.currentModuleTestEnviroment=testEnvironment;},asyncTest:function(testName,expected,callback){if(arguments.length===2){callback=expected;expected=null;}
QUnit.test(testName,expected,callback,true);},test:function(testName,expected,callback,async){var name='<span class="test-name">'+testName+'</span>',testEnvironmentArg;if(arguments.length===2){callback=expected;expected=null;}
if(expected&&typeof expected==='object'){testEnvironmentArg=expected;expected=null;}
if(config.currentModule){name='<span class="module-name">'+config.currentModule+"</span>: "+name;}
if(!validTest(config.currentModule+": "+testName)){return;}
var test=new Test(name,testName,expected,testEnvironmentArg,async,callback);test.module=config.currentModule;test.moduleTestEnvironment=config.currentModuleTestEnviroment;test.queue();},expect:function(asserts){config.current.expected=asserts;},ok:function(a,msg){a=!!a;var details={result:a,message:msg};msg=escapeInnerText(msg);runLoggingCallbacks('log',QUnit,details);config.current.assertions.push({result:a,message:msg});},equal:function(actual,expected,message){QUnit.push(expected==actual,actual,expected,message);},notEqual:function(actual,expected,message){QUnit.push(expected!=actual,actual,expected,message);},deepEqual:function(actual,expected,message){QUnit.push(QUnit.equiv(actual,expected),actual,expected,message);},notDeepEqual:function(actual,expected,message){QUnit.push(!QUnit.equiv(actual,expected),actual,expected,message);},strictEqual:function(actual,expected,message){QUnit.push(expected===actual,actual,expected,message);},notStrictEqual:function(actual,expected,message){QUnit.push(expected!==actual,actual,expected,message);},raises:function(block,expected,message){var actual,ok=false;if(typeof expected==='string'){message=expected;expected=null;}
try{block();}catch(e){actual=e;}
if(actual){if(!expected){ok=true;}else if(QUnit.objectType(expected)==="regexp"){ok=expected.test(actual);}else if(actual instanceof expected){ok=true;}else if(expected.call({},actual)===true){ok=true;}}
QUnit.ok(ok,message);},start:function(count){config.semaphore-=count||1;if(config.semaphore>0){return;}
if(config.semaphore<0){config.semaphore=0;}
if(defined.setTimeout){window.setTimeout(function(){if(config.semaphore>0){return;}
if(config.timeout){clearTimeout(config.timeout);}
config.blocking=false;process(true);},13);}else{config.blocking=false;process(true);}},stop:function(count){config.semaphore+=count||1;config.blocking=true;if(config.testTimeout&&defined.setTimeout){clearTimeout(config.timeout);config.timeout=window.setTimeout(function(){QUnit.ok(false,"Test timed out");config.semaphore=1;QUnit.start();},config.testTimeout);}}};(function(){function F(){};F.prototype=QUnit;QUnit=new F();QUnit.constructor=F;})();QUnit.equals=QUnit.equal;QUnit.same=QUnit.deepEqual;var config={queue:[],blocking:true,hidepassed:false,reorder:true,altertitle:false,urlConfig:['noglobals','notrycatch'],begin:[],done:[],log:[],testStart:[],testDone:[],moduleStart:[],moduleDone:[]};(function(){var location=window.location||{search:"",protocol:"file:"},params=location.search.slice(1).split("&"),length=params.length,urlParams={},current;if(params[0]){for(var i=0;i<length;i++){current=params[i].split("=");current[0]=decodeURIComponent(current[0]);current[1]=current[1]?decodeURIComponent(current[1]):true;urlParams[current[0]]=current[1];}}
QUnit.urlParams=urlParams;config.filter=urlParams.filter;QUnit.isLocal=!!(location.protocol==='file:');})();if(typeof exports==="undefined"||typeof require==="undefined"){extend(window,QUnit);window.QUnit=QUnit;}else{extend(exports,QUnit);exports.QUnit=QUnit;}
extend(QUnit,{config:config,init:function(){extend(config,{stats:{all:0,bad:0},moduleStats:{all:0,bad:0},started:+new Date,updateRate:1000,blocking:false,autostart:true,autorun:false,filter:"",queue:[],semaphore:0});var tests=id("qunit-tests"),banner=id("qunit-banner"),result=id("qunit-testresult");if(tests){tests.innerHTML="";}
if(banner){banner.className="";}
if(result){result.parentNode.removeChild(result);}
if(tests){result=document.createElement("p");result.id="qunit-testresult";result.className="result";tests.parentNode.insertBefore(result,tests);result.innerHTML='Running...<br/>&nbsp;';}},reset:function(){if(window.jQuery){jQuery("#qunit-fixture").html(config.fixture);}else{var main=id('qunit-fixture');if(main){main.innerHTML=config.fixture;}}},triggerEvent:function(elem,type,event){if(document.createEvent){event=document.createEvent("MouseEvents");event.initMouseEvent(type,true,true,elem.ownerDocument.defaultView,0,0,0,0,0,false,false,false,false,0,null);elem.dispatchEvent(event);}else if(elem.fireEvent){elem.fireEvent("on"+type);}},is:function(type,obj){return QUnit.objectType(obj)==type;},objectType:function(obj){if(typeof obj==="undefined"){return"undefined";}
if(obj===null){return"null";}
var type=toString.call(obj).match(/^\[object\s(.*)\]$/)[1]||'';switch(type){case'Number':if(isNaN(obj)){return"nan";}else{return"number";}
case'String':case'Boolean':case'Array':case'Date':case'RegExp':case'Function':return type.toLowerCase();}
if(typeof obj==="object"){return"object";}
return undefined;},push:function(result,actual,expected,message){var details={result:result,message:message,actual:actual,expected:expected};message=escapeInnerText(message)||(result?"okay":"failed");message='<span class="test-message">'+message+"</span>";expected=escapeInnerText(QUnit.jsDump.parse(expected));actual=escapeInnerText(QUnit.jsDump.parse(actual));var output=message+'<table><tr class="test-expected"><th>Expected: </th><td><pre>'+expected+'</pre></td></tr>';if(actual!=expected){output+='<tr class="test-actual"><th>Result: </th><td><pre>'+actual+'</pre></td></tr>';output+='<tr class="test-diff"><th>Diff: </th><td><pre>'+QUnit.diff(expected,actual)+'</pre></td></tr>';}
if(!result){var source=sourceFromStacktrace();if(source){details.source=source;output+='<tr class="test-source"><th>Source: </th><td><pre>'+escapeInnerText(source)+'</pre></td></tr>';}}
output+="</table>";runLoggingCallbacks('log',QUnit,details);config.current.assertions.push({result:!!result,message:output});},url:function(params){params=extend(extend({},QUnit.urlParams),params);var querystring="?",key;for(key in params){if(!hasOwn.call(params,key)){continue;}
querystring+=encodeURIComponent(key)+"="+
encodeURIComponent(params[key])+"&";}
return window.location.pathname+querystring.slice(0,-1);},extend:extend,id:id,addEvent:addEvent});extend(QUnit.constructor.prototype,{begin:registerLoggingCallback('begin'),done:registerLoggingCallback('done'),log:registerLoggingCallback('log'),testStart:registerLoggingCallback('testStart'),testDone:registerLoggingCallback('testDone'),moduleStart:registerLoggingCallback('moduleStart'),moduleDone:registerLoggingCallback('moduleDone')});if(typeof document==="undefined"||document.readyState==="complete"){config.autorun=true;}
QUnit.load=function(){runLoggingCallbacks('begin',QUnit,{});var oldconfig=extend({},config);QUnit.init();extend(config,oldconfig);config.blocking=false;var urlConfigHtml='',len=config.urlConfig.length;for(var i=0,val;i<len,val=config.urlConfig[i];i++){config[val]=QUnit.urlParams[val];urlConfigHtml+='<label><input name="'+val+'" type="checkbox"'+(config[val]?' checked="checked"':'')+'>'+val+'</label>';}
var userAgent=id("qunit-userAgent");if(userAgent){userAgent.innerHTML=navigator.userAgent;}
var banner=id("qunit-header");if(banner){banner.innerHTML='<a href="'+QUnit.url({filter:undefined})+'"> '+banner.innerHTML+'</a> '+urlConfigHtml;addEvent(banner,"change",function(event){var params={};params[event.target.name]=event.target.checked?true:undefined;window.location=QUnit.url(params);});}
var toolbar=id("qunit-testrunner-toolbar");if(toolbar){var filter=document.createElement("input");filter.type="checkbox";filter.id="qunit-filter-pass";addEvent(filter,"click",function(){var ol=document.getElementById("qunit-tests");if(filter.checked){ol.className=ol.className+" hidepass";}else{var tmp=" "+ol.className.replace(/[\n\t\r]/g," ")+" ";ol.className=tmp.replace(/ hidepass /," ");}
if(defined.sessionStorage){if(filter.checked){sessionStorage.setItem("qunit-filter-passed-tests","true");}else{sessionStorage.removeItem("qunit-filter-passed-tests");}}});if(config.hidepassed||defined.sessionStorage&&sessionStorage.getItem("qunit-filter-passed-tests")){filter.checked=true;var ol=document.getElementById("qunit-tests");ol.className=ol.className+" hidepass";}
toolbar.appendChild(filter);var label=document.createElement("label");label.setAttribute("for","qunit-filter-pass");label.innerHTML="Hide passed tests";toolbar.appendChild(label);}
var main=id('qunit-fixture');if(main){config.fixture=main.innerHTML;}
if(config.autostart){QUnit.start();}};addEvent(window,"load",QUnit.load);window.onerror=function(message,file,line){if(QUnit.config.current){ok(false,message+", "+file+":"+line);}else{test("global failure",function(){ok(false,message+", "+file+":"+line);});}};function done(){config.autorun=true;if(config.currentModule){runLoggingCallbacks('moduleDone',QUnit,{name:config.currentModule,failed:config.moduleStats.bad,passed:config.moduleStats.all-config.moduleStats.bad,total:config.moduleStats.all});}
var banner=id("qunit-banner"),tests=id("qunit-tests"),runtime=+new Date-config.started,passed=config.stats.all-config.stats.bad,html=['Tests completed in ',runtime,' milliseconds.<br/>','<span class="passed">',passed,'</span> tests of <span class="total">',config.stats.all,'</span> passed, <span class="failed">',config.stats.bad,'</span> failed.'].join('');if(banner){banner.className=(config.stats.bad?"qunit-fail":"qunit-pass");}
if(tests){id("qunit-testresult").innerHTML=html;}
if(config.altertitle&&typeof document!=="undefined"&&document.title){document.title=[(config.stats.bad?"\u2716":"\u2714"),document.title.replace(/^[\u2714\u2716] /i,"")].join(" ");}
runLoggingCallbacks('done',QUnit,{failed:config.stats.bad,passed:passed,total:config.stats.all,runtime:runtime});}
function validTest(name){var filter=config.filter,run=false;if(!filter){return true;}
var not=filter.charAt(0)==="!";if(not){filter=filter.slice(1);}
if(name.indexOf(filter)!==-1){return!not;}
if(not){run=true;}
return run;}
function sourceFromStacktrace(){try{throw new Error();}catch(e){if(e.stacktrace){return e.stacktrace.split("\n")[6];}else if(e.stack){return e.stack.split("\n")[4];}else if(e.sourceURL){}}}
function escapeInnerText(s){if(!s){return"";}
s=s+"";return s.replace(/[\&<>]/g,function(s){switch(s){case"&":return"&amp;";case"<":return"&lt;";case">":return"&gt;";default:return s;}});}
function synchronize(callback,last){config.queue.push(callback);if(config.autorun&&!config.blocking){process(last);}}
function process(last){var start=new Date().getTime();config.depth=config.depth?config.depth+1:1;while(config.queue.length&&!config.blocking){if(!defined.setTimeout||config.updateRate<=0||((new Date().getTime()-start)<config.updateRate)){config.queue.shift()();}else{window.setTimeout(function(){process(last);},13);break;}}
config.depth--;if(last&&!config.blocking&&!config.queue.length&&config.depth===0){done();}}
function saveGlobal(){config.pollution=[];if(config.noglobals){for(var key in window){if(!hasOwn.call(window,key)){continue;}
config.pollution.push(key);}}}
function checkPollution(name){var old=config.pollution;saveGlobal();var newGlobals=diff(config.pollution,old);if(newGlobals.length>0){ok(false,"Introduced global variable(s): "+newGlobals.join(", "));}
var deletedGlobals=diff(old,config.pollution);if(deletedGlobals.length>0){ok(false,"Deleted global variable(s): "+deletedGlobals.join(", "));}}
function diff(a,b){var result=a.slice();for(var i=0;i<result.length;i++){for(var j=0;j<b.length;j++){if(result[i]===b[j]){result.splice(i,1);i--;break;}}}
return result;}
function fail(message,exception,callback){if(typeof console!=="undefined"){}else if(window.opera&&opera.postError){opera.postError(message,exception,callback.toString);}}
function extend(a,b){for(var prop in b){if(b[prop]===undefined){delete a[prop];}else if(prop!=="constructor"||a!==window){a[prop]=b[prop];}}
return a;}
function addEvent(elem,type,fn){if(elem.addEventListener){elem.addEventListener(type,fn,false);}else if(elem.attachEvent){elem.attachEvent("on"+type,fn);}else{fn();}}
function id(name){return!!(typeof document!=="undefined"&&document&&document.getElementById)&&document.getElementById(name);}
function registerLoggingCallback(key){return function(callback){config[key].push(callback);};}
function runLoggingCallbacks(key,scope,args){var callbacks;if(QUnit.hasOwnProperty(key)){QUnit[key].call(scope,args);}else{callbacks=config[key];for(var i=0;i<callbacks.length;i++){callbacks[i].call(scope,args);}}}
QUnit.equiv=function(){var innerEquiv;var callers=[];var parents=[];function bindCallbacks(o,callbacks,args){var prop=QUnit.objectType(o);if(prop){if(QUnit.objectType(callbacks[prop])==="function"){return callbacks[prop].apply(callbacks,args);}else{return callbacks[prop];}}}
var getProto=Object.getPrototypeOf||function(obj){return obj.__proto__;};var callbacks=function(){function useStrictEquality(b,a){if(b instanceof a.constructor||a instanceof b.constructor){return a==b;}else{return a===b;}}
return{"string":useStrictEquality,"boolean":useStrictEquality,"number":useStrictEquality,"null":useStrictEquality,"undefined":useStrictEquality,"nan":function(b){return isNaN(b);},"date":function(b,a){return QUnit.objectType(b)==="date"&&a.valueOf()===b.valueOf();},"regexp":function(b,a){return QUnit.objectType(b)==="regexp"&&a.source===b.source&&a.global===b.global&&a.ignoreCase===b.ignoreCase&&a.multiline===b.multiline;},"function":function(){var caller=callers[callers.length-1];return caller!==Object&&typeof caller!=="undefined";},"array":function(b,a){var i,j,loop;var len;if(!(QUnit.objectType(b)==="array")){return false;}
len=a.length;if(len!==b.length){return false;}
parents.push(a);for(i=0;i<len;i++){loop=false;for(j=0;j<parents.length;j++){if(parents[j]===a[i]){loop=true;}}
if(!loop&&!innerEquiv(a[i],b[i])){parents.pop();return false;}}
parents.pop();return true;},"object":function(b,a){var i,j,loop;var eq=true;var aProperties=[],bProperties=[];if(a.constructor!==b.constructor){if(!((getProto(a)===null&&getProto(b)===Object.prototype)||(getProto(b)===null&&getProto(a)===Object.prototype)))
{return false;}}
callers.push(a.constructor);parents.push(a);for(i in a){loop=false;for(j=0;j<parents.length;j++){if(parents[j]===a[i])
loop=true;}
aProperties.push(i);if(!loop&&!innerEquiv(a[i],b[i])){eq=false;break;}}
callers.pop();parents.pop();for(i in b){bProperties.push(i);}
return eq&&innerEquiv(aProperties.sort(),bProperties.sort());}};}();innerEquiv=function(){var args=Array.prototype.slice.apply(arguments);if(args.length<2){return true;}
return(function(a,b){if(a===b){return true;}else if(a===null||b===null||typeof a==="undefined"||typeof b==="undefined"||QUnit.objectType(a)!==QUnit.objectType(b)){return false;}else{return bindCallbacks(a,callbacks,[b,a]);}})(args[0],args[1])&&arguments.callee.apply(this,args.splice(1,args.length-1));};return innerEquiv;}();QUnit.jsDump=(function(){function quote(str){return'"'+str.toString().replace(/"/g,'\\"')+'"';};function literal(o){return o+'';};function join(pre,arr,post){var s=jsDump.separator(),base=jsDump.indent(),inner=jsDump.indent(1);if(arr.join)
arr=arr.join(','+s+inner);if(!arr)
return pre+post;return[pre,inner+arr,base+post].join(s);};function array(arr,stack){var i=arr.length,ret=Array(i);this.up();while(i--)
ret[i]=this.parse(arr[i],undefined,stack);this.down();return join('[',ret,']');};var reName=/^function (\w+)/;var jsDump={parse:function(obj,type,stack){stack=stack||[];var parser=this.parsers[type||this.typeOf(obj)];type=typeof parser;var inStack=inArray(obj,stack);if(inStack!=-1){return'recursion('+(inStack-stack.length)+')';}
if(type=='function'){stack.push(obj);var res=parser.call(this,obj,stack);stack.pop();return res;}
return(type=='string')?parser:this.parsers.error;},typeOf:function(obj){var type;if(obj===null){type="null";}else if(typeof obj==="undefined"){type="undefined";}else if(QUnit.is("RegExp",obj)){type="regexp";}else if(QUnit.is("Date",obj)){type="date";}else if(QUnit.is("Function",obj)){type="function";}else if(typeof obj.setInterval!==undefined&&typeof obj.document!=="undefined"&&typeof obj.nodeType==="undefined"){type="window";}else if(obj.nodeType===9){type="document";}else if(obj.nodeType){type="node";}else if(toString.call(obj)==="[object Array]"||(typeof obj.length==="number"&&typeof obj.item!=="undefined"&&(obj.length?obj.item(0)===obj[0]:(obj.item(0)===null&&typeof obj[0]==="undefined")))){type="array";}else{type=typeof obj;}
return type;},separator:function(){return this.multiline?this.HTML?'<br />':'\n':this.HTML?'&nbsp;':' ';},indent:function(extra){if(!this.multiline)
return'';var chr=this.indentChar;if(this.HTML)
chr=chr.replace(/\t/g,'   ').replace(/ /g,'&nbsp;');return Array(this._depth_+(extra||0)).join(chr);},up:function(a){this._depth_+=a||1;},down:function(a){this._depth_-=a||1;},setParser:function(name,parser){this.parsers[name]=parser;},quote:quote,literal:literal,join:join,_depth_:1,parsers:{window:'[Window]',document:'[Document]',error:'[ERROR]',unknown:'[Unknown]','null':'null','undefined':'undefined','function':function(fn){var ret='function',name='name'in fn?fn.name:(reName.exec(fn)||[])[1];if(name)
ret+=' '+name;ret+='(';ret=[ret,QUnit.jsDump.parse(fn,'functionArgs'),'){'].join('');return join(ret,QUnit.jsDump.parse(fn,'functionCode'),'}');},array:array,nodelist:array,arguments:array,object:function(map,stack){var ret=[];QUnit.jsDump.up();for(var key in map){var val=map[key];ret.push(QUnit.jsDump.parse(key,'key')+': '+QUnit.jsDump.parse(val,undefined,stack));}
QUnit.jsDump.down();return join('{',ret,'}');},node:function(node){var open=QUnit.jsDump.HTML?'&lt;':'<',close=QUnit.jsDump.HTML?'&gt;':'>';var tag=node.nodeName.toLowerCase(),ret=open+tag;for(var a in QUnit.jsDump.DOMAttrs){var val=node[QUnit.jsDump.DOMAttrs[a]];if(val)
ret+=' '+a+'='+QUnit.jsDump.parse(val,'attribute');}
return ret+close+open+'/'+tag+close;},functionArgs:function(fn){var l=fn.length;if(!l)return'';var args=Array(l);while(l--)
args[l]=String.fromCharCode(97+l);return' '+args.join(', ')+' ';},key:quote,functionCode:'[code]',attribute:quote,string:quote,date:quote,regexp:literal,number:literal,'boolean':literal},DOMAttrs:{id:'id',name:'name','class':'className'},HTML:false,indentChar:'  ',multiline:true};return jsDump;})();function getText(elems){var ret="",elem;for(var i=0;elems[i];i++){elem=elems[i];if(elem.nodeType===3||elem.nodeType===4){ret+=elem.nodeValue;}else if(elem.nodeType!==8){ret+=getText(elem.childNodes);}}
return ret;};function inArray(elem,array){if(array.indexOf){return array.indexOf(elem);}
for(var i=0,length=array.length;i<length;i++){if(array[i]===elem){return i;}}
return-1;}
QUnit.diff=(function(){function diff(o,n){var ns={};var os={};for(var i=0;i<n.length;i++){if(ns[n[i]]==null)
ns[n[i]]={rows:[],o:null};ns[n[i]].rows.push(i);}
for(var i=0;i<o.length;i++){if(os[o[i]]==null)
os[o[i]]={rows:[],n:null};os[o[i]].rows.push(i);}
for(var i in ns){if(!hasOwn.call(ns,i)){continue;}
if(ns[i].rows.length==1&&typeof(os[i])!="undefined"&&os[i].rows.length==1){n[ns[i].rows[0]]={text:n[ns[i].rows[0]],row:os[i].rows[0]};o[os[i].rows[0]]={text:o[os[i].rows[0]],row:ns[i].rows[0]};}}
for(var i=0;i<n.length-1;i++){if(n[i].text!=null&&n[i+1].text==null&&n[i].row+1<o.length&&o[n[i].row+1].text==null&&n[i+1]==o[n[i].row+1]){n[i+1]={text:n[i+1],row:n[i].row+1};o[n[i].row+1]={text:o[n[i].row+1],row:i+1};}}
for(var i=n.length-1;i>0;i--){if(n[i].text!=null&&n[i-1].text==null&&n[i].row>0&&o[n[i].row-1].text==null&&n[i-1]==o[n[i].row-1]){n[i-1]={text:n[i-1],row:n[i].row-1};o[n[i].row-1]={text:o[n[i].row-1],row:i-1};}}
return{o:o,n:n};}
return function(o,n){o=o.replace(/\s+$/,'');n=n.replace(/\s+$/,'');var out=diff(o==""?[]:o.split(/\s+/),n==""?[]:n.split(/\s+/));var str="";var oSpace=o.match(/\s+/g);if(oSpace==null){oSpace=[" "];}
else{oSpace.push(" ");}
var nSpace=n.match(/\s+/g);if(nSpace==null){nSpace=[" "];}
else{nSpace.push(" ");}
if(out.n.length==0){for(var i=0;i<out.o.length;i++){str+='<del>'+out.o[i]+oSpace[i]+"</del>";}}
else{if(out.n[0].text==null){for(n=0;n<out.o.length&&out.o[n].text==null;n++){str+='<del>'+out.o[n]+oSpace[n]+"</del>";}}
for(var i=0;i<out.n.length;i++){if(out.n[i].text==null){str+='<ins>'+out.n[i]+nSpace[i]+"</ins>";}
else{var pre="";for(n=out.n[i].row+1;n<out.o.length&&out.o[n].text==null;n++){pre+='<del>'+out.o[n]+oSpace[n]+"</del>";}
str+=" "+out.n[i].text+nSpace[i]+pre;}}}
return str;};})();})(this);if($.cookie('debug')){document.write('<style>#qunit-tests, #qunit-header, #qunit-banner, #qunit-testrunner-toolbar, #qunit-userAgent, #qunit-testresult { font-family: "Helvetica Neue Light", "HelveticaNeue-Light", "Helvetica Neue", Calibri, Helvetica, Arial, sans-serif;}#qunit-testrunner-toolbar, #qunit-userAgent, #qunit-testresult, #qunit-tests li { font-size: small; }#qunit-tests { font-size: smaller; }#qunit-tests, #qunit-tests ol, #qunit-header, #qunit-banner, #qunit-userAgent, #qunit-testresult {margin: 0;padding: 0;}#qunit-header {padding: 0.5em 0 0.5em 1em;color: #8699a4;background-color: #0d3349;font-size: 1.5em;line-height: 1em;font-weight: normal;border-radius: 15px 15px 0 0;-moz-border-radius: 15px 15px 0 0;-webkit-border-top-right-radius: 15px;-webkit-border-top-left-radius: 15px;}#qunit-header a {text-decoration: none;color: #c2ccd1;}#qunit-header a:hover,#qunit-header a:focus {color: #fff;}#qunit-banner {height: 5px;}#qunit-testrunner-toolbar {padding: 0.5em 0 0.5em 2em;color: #5E740B;background-color: #eee;}#qunit-userAgent {padding: 0.5em 0 0.5em 2.5em;background-color: #2b81af;color: #fff;text-shadow: rgba(0, 0, 0, 0.5) 2px 2px 1px;}#qunit-tests {list-style-position: inside;}#qunit-tests li {padding: 0.4em 0.5em 0.4em 2.5em;border-bottom: 1px solid #fff;list-style-position: inside;}#qunit-tests.hidepass li.pass, #qunit-tests.hidepass li.running  {display: none;}#qunit-tests li strong {cursor: pointer;}#qunit-tests li a {padding: 0.5em;color: #c2ccd1;text-decoration: none;}#qunit-tests li a:hover,#qunit-tests li a:focus {color: #000;}#qunit-tests ol {margin-top: 0.5em;padding: 0.5em; background-color: #fff;border-radius: 15px;-moz-border-radius: 15px;-webkit-border-radius: 15px;box-shadow: inset 0px 2px 13px #999;-moz-box-shadow: inset 0px 2px 13px #999;-webkit-box-shadow: inset 0px 2px 13px #999;}#qunit-tests table {border-collapse: collapse;margin-top: .2em;}#qunit-tests th {text-align: right;vertical-align: top;padding: 0 .5em 0 0;}#qunit-tests td {vertical-align: top;}#qunit-tests pre {margin: 0;white-space: pre-wrap;word-wrap: break-word;} #qunit-tests del { background-color: #e0f2be; color: #374e0c; text-decoration: none;}#qunit-tests ins { background-color: #ffcaca; color: #500; text-decoration: none;}#qunit-tests b.counts { color: black; }#qunit-tests b.passed { color: #5E740B; }#qunit-tests b.failed { color: #710909; }#qunit-tests li li { margin: 0.5em; padding: 0.4em 0.5em 0.4em 0.5em; background-color: #fff; border-bottom: none; list-style-position: inside;}#qunit-tests li li.pass { color: #5E740B; background-color: #fff; border-left: 26px solid #C6E746;}#qunit-tests .pass { color: #528CE0; background-color: #D2E0E6; }#qunit-tests .pass .test-name { color: #366097; }#qunit-tests .pass .test-actual,#qunit-tests .pass .test-expected { color: #999999; }#qunit-banner.qunit-pass { background-color: #C6E746; }#qunit-tests li li.fail {color: #710909; background-color: #fff; border-left: 26px solid #EE5757; white-space: pre;}#qunit-tests > li:last-child { border-radius: 0 0 15px 15px; -moz-border-radius: 0 0 15px 15px; -webkit-border-bottom-right-radius: 15px; -webkit-border-bottom-left-radius: 15px;}#qunit-tests .fail { color: #000000; background-color: #EE5757; }#qunit-tests .fail .test-name,#qunit-tests .fail .module-name { color: #000000; }#qunit-tests .fail .test-actual { color: #EE5757; }#qunit-tests .fail .test-expected { color: green;   }#qunit-banner.qunit-fail { background-color: #EE5757; }#qunit-testresult { padding: 0.5em 0.5em 0.5em 2.5em;color: #2b81af;background-color: #D2E0E6; border-bottom: 1px solid white;}#qunit-fixture { position: absolute; top: -10000px; left: -10000px;}#qunit-box{width: 400px;background-color:#D2E0E6;border-radius: 16px;-moz-border-radius: 16px;-webkit-border-radius: 16px; overflow:hidden; border:1px solid #000000;position:fixed;z-index:100000}</style>');document.write('<div id="qunit-box"><h1 id="qunit-header">QUnit test env</h1><h2 id="qunit-banner"></h2><h2 id="qunit-userAgent"></h2><ol id="qunit-tests"></ol></div>');$(function(){$('#qunit-box').draggable({}).resizable({});});}
